{"version":3,"sources":["../node_modules/contentful-ui-extensions-sdk/dist/cf-extension-api.js","utils.ts","event-handlers.ts","table-controller.ts","index.ts"],"names":[],"mappings":"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","file":"src.51ebb6e1.js","sourceRoot":"..\\src","sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self).contentfulExtension={})}(this,(function(e){\"use strict\";var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,n)};var n,r=function(){return(r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};var o=function(){function e(){this._id=0,this._listeners={}}return e.prototype.dispatch=function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];for(var r in this._listeners)(e=this._listeners)[r].apply(e,t)},e.prototype.attach=function(e){var t=this;if(\"function\"!=typeof e)throw new Error(\"listener function expected\");var n=this._id++;return this._listeners[n]=e,function(){return delete t._listeners[n]}},e}(),i=\"__private__memoized__arguments__\",a=function(e){function r(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var o=e.call(this)||this;if(o[n]=[],!t.length)throw new Error(\"Initial value to be memoized expected\");return o[i]=t,o}return function(e,n){if(\"function\"!=typeof n&&null!==n)throw new TypeError(\"Class extends value \"+String(n)+\" is not a constructor or null\");function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}(r,e),r.prototype.dispatch=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];this[i]=t,e.prototype.dispatch.apply(this,t)},r.prototype.attach=function(t){var n=e.prototype.attach.call(this,t);return t.apply(void 0,this[i]),n},r}(o);n=i;var s=function(){function e(e,t){var n=this;this._messageHandlers={},this._responseHandlers={},this._send=function(e,t){var n=0;return function(r,o){var i=n++;try{t.postMessage({source:e,id:i,method:r,params:o},\"*\")}catch(e){throw e instanceof DOMException&&\"DataCloneError\"===e.name&&\"openDialog\"===r&&console.error(\"Error: openCurrent[App] parameters could not be parsed. You likely tried to pass functions or DOM elements as a parameter. Tip: Use the App SDK directly within the dialog location.\\n\\nLearn more about the dialog location: https://ctfl.io/app-sdk-dialog\"),e}return i}}(e,t.parent),t.addEventListener(\"message\",(function(e){n._handleMessage(e.data)}))}return e.prototype.call=function(e){for(var t=this,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var o=this._send(e,n);return new Promise((function(e,n){t._responseHandlers[o]={resolve:e,reject:n}}))},e.prototype.send=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];this._send(e,t)},e.prototype.addHandler=function(e,t){return e in this._messageHandlers||(this._messageHandlers[e]=new o),this._messageHandlers[e].attach(t)},e.prototype._handleMessage=function(e){if(e.method){var t=e.method,n=e.params,r=this._messageHandlers[t];r&&r.dispatch.apply(r,n)}else{var o=e.id,i=this._responseHandlers[o];if(!i)return;\"result\"in e?i.resolve(e.result):\"error\"in e&&i.reject(e.error),delete this._responseHandlers[o]}},e}();var l=function(){function e(e,t){var n=this;this.id=t.id,this.locale=t.locale,this.type=t.type,this.required=t.required,this.validations=t.validations,this.items=t.items,this._value=t.value,this._valueSignal=new a(this._value),this._isDisabledSignal=new a(void 0),this._schemaErrorsChangedSignal=new a(void 0),this._channel=e,e.addHandler(\"valueChanged\",(function(e,t,r){e!==n.id||t&&t!==n.locale||(n._value=r,n._valueSignal.dispatch(r))})),e.addHandler(\"isDisabledChangedForFieldLocale\",(function(e,t,r){e===n.id&&t===n.locale&&n._isDisabledSignal.dispatch(r)})),e.addHandler(\"schemaErrorsChangedForFieldLocale\",(function(e,t,r){e===n.id&&t===n.locale&&n._schemaErrorsChangedSignal.dispatch(r)}))}return e.prototype.getValue=function(){return this._value},e.prototype.setValue=function(e){return this._value=e,this._valueSignal.dispatch(e),this._channel.call(\"setValue\",this.id,this.locale,e)},e.prototype.removeValue=function(){return this._value=void 0,this._channel.call(\"removeValue\",this.id,this.locale)},e.prototype.setInvalid=function(e){return this._channel.call(\"setInvalid\",e,this.locale)},e.prototype.onValueChanged=function(e){return this._valueSignal.attach(e)},e.prototype.onIsDisabledChanged=function(e){return this._isDisabledSignal.attach(e)},e.prototype.onSchemaErrorsChanged=function(e){return this._schemaErrorsChangedSignal.attach(e)},e}(),u=function(){function e(e,t,n){this.id=t.id,this.locales=t.locales,this.type=t.type,this.required=t.required,this.validations=t.validations,this.items=t.items,this._defaultLocale=n,this._fieldLocales=t.locales.reduce((function(n,o){var i,a=new l(e,{id:t.id,type:t.type,required:t.required,validations:t.validations,items:t.items,locale:o,value:t.values[o]});return r(r({},n),((i={})[o]=a,i))}),{}),this.assertHasLocale(n)}return e.prototype.getValue=function(e){return this._getFieldLocale(e).getValue()},e.prototype.setValue=function(e,t){return this._getFieldLocale(t).setValue(e)},e.prototype.removeValue=function(e){return this.setValue(void 0,e)},e.prototype.onValueChanged=function(e,t){var n=t||e;return t||(e=\"\"),this._getFieldLocale(e).onValueChanged(n)},e.prototype.onIsDisabledChanged=function(e,t){var n=t||e;return t||(e=\"\"),this._getFieldLocale(e).onIsDisabledChanged(n)},e.prototype._getFieldLocale=function(e){return e=e||this._defaultLocale,this.assertHasLocale(e),this._fieldLocales[e]},e.prototype.getForLocale=function(e){if(!e)throw new Error(\"getForLocale must be passed a locale\");return this._getFieldLocale(e)},e.prototype.assertHasLocale=function(e){if(!this._fieldLocales[e])throw new Error('Unknown locale \"'+e+'\" for field \"'+this.id+'\"')},e}();function c(e,t){var n,r=e,o=r.document,i=r.MutationObserver,a=function(){u.updateHeight()},s=new i(a),l=!1,u={startAutoResizer:function(){if(u.updateHeight(),l)return;l=!0,s.observe(o.body,{attributes:!0,childList:!0,subtree:!0,characterData:!0}),e.addEventListener(\"resize\",a)},stopAutoResizer:function(){if(!l)return;l=!1,s.disconnect(),e.removeEventListener(\"resize\",a)},updateHeight:function(e){void 0===e&&(e=null);null===e&&(e=Math.ceil(o.documentElement.getBoundingClientRect().height));e!==n&&(t.send(\"setHeight\",e),n=e)}};return u}var d=[\"getTask\",\"getTasks\",\"createTask\",\"updateTask\",\"deleteTask\"];function p(e,t,n,o){var i=t.sys,s=new a(i),l=t.metadata,u=new a(l);e.addHandler(\"sysChanged\",(function(e){i=e,s.dispatch(i)})),e.addHandler(\"metadataChanged\",(function(e){l=e,u.dispatch(l)}));var c={};return d.forEach((function(t){c[t]=function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];return e.call(\"callEntryMethod\",t,n)}})),r(r(r({getSys:function(){return i},onSysChanged:function(e){return s.attach(e)},fields:n.reduce((function(e,t){return e[t.id]=o(t),e}),{})},l?{metadata:l}:{}),{getMetadata:function(){return l},onMetadataChanged:function(e){return u.attach(e)}}),c)}var f=[\"getContentType\",\"getEntry\",\"getEntrySnapshots\",\"getAsset\",\"getEditorInterface\",\"getPublishedEntries\",\"getPublishedAssets\",\"getContentTypes\",\"getEntries\",\"getEditorInterfaces\",\"getAssets\",\"createContentType\",\"createEntry\",\"createAsset\",\"updateContentType\",\"updateEntry\",\"updateAsset\",\"deleteContentType\",\"deleteEntry\",\"deleteAsset\",\"publishEntry\",\"publishAsset\",\"unpublishEntry\",\"unpublishAsset\",\"archiveEntry\",\"archiveAsset\",\"unarchiveEntry\",\"unarchiveAsset\",\"createUpload\",\"processAsset\",\"waitUntilAssetProcessed\",\"getUsers\",\"getAllScheduledActions\",\"getEntityScheduledActions\",\"signRequest\",\"createTag\",\"readTags\",\"updateTag\",\"deleteTag\",\"getTeams\"];function h(e,t){var n={};return f.forEach((function(t){n[t]=function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];return e.call(\"callSpaceMethod\",t,n)}})),n.getCachedContentTypes=function(){return function(e,t){for(var n=0,r=t.length,o=e.length;n<r;n++,o++)e[o]=t[n];return e}([],t)},n}var g=function(e){return\"object\"!=typeof(t=e)||null===t||Array.isArray(t)?{}:e;var t};function v(e,t){return{openAlert:n.bind(null,\"alert\"),openConfirm:n.bind(null,\"confirm\"),openPrompt:n.bind(null,\"prompt\"),openExtension:o,openCurrentApp:i,openCurrent:function(e){return t.app?i(e):o(r(r({},e),{id:t.extension}))},selectSingleEntry:a.bind(null,\"Entry\",!1),selectSingleAsset:a.bind(null,\"Asset\",!1),selectMultipleEntries:a.bind(null,\"Entry\",!0),selectMultipleAssets:a.bind(null,\"Asset\",!0)};function n(t,n){return e.call(\"openDialog\",t,g(n))}function o(n){var o=g(n);if((o=r(r({},o),{id:o.id||t.extension})).id)return e.call(\"openDialog\",\"extension\",o);throw new Error(\"Extension ID not provided.\")}function i(n){if(n=g(n),t.app){var o=r(r({},n),{id:t.app});return e.call(\"openDialog\",\"app\",o)}throw new Error(\"Not in the app context.\")}function a(t,n,r){return(r=g(r)).entityType=t,r.multiple=n,e.call(\"openDialog\",\"entitySelector\",r)}}function y(e,t){var n=new a(void 0),r=new a(void 0);return e.addHandler(\"localeSettingsChanged\",(function(e){n.dispatch(e)})),e.addHandler(\"showDisabledFieldsChanged\",(function(e){r.dispatch(e)})),{editorInterface:t,onLocaleSettingsChanged:function(e){return n.attach(e)},onShowDisabledFieldsChanged:function(e){return r.attach(e)}}}function _(e,t){var n=new o;return e.addHandler(\"navigateSlideIn\",(function(e){n.dispatch(e)})),{openEntry:function(t,n){return e.call(\"navigateToContentEntity\",r(r({},n),{entityType:\"Entry\",id:t}))},openNewEntry:function(t,n){return e.call(\"navigateToContentEntity\",r(r({},n),{entityType:\"Entry\",id:null,contentTypeId:t}))},openBulkEditor:function(t,n){return e.call(\"navigateToBulkEditor\",r({entryId:t},n))},openAsset:function(t,n){return e.call(\"navigateToContentEntity\",r(r({},n),{entityType:\"Asset\",id:t}))},openNewAsset:function(t){return e.call(\"navigateToContentEntity\",r(r({},t),{entityType:\"Asset\",id:null}))},openPageExtension:function(n){return e.call(\"navigateToPage\",r({type:\"extension\",id:t.extension},n))},openCurrentAppPage:function(n){return e.call(\"navigateToPage\",r({type:\"app\",id:t.app},n))},openAppConfig:function(){return e.call(\"navigateToAppConfig\")},openEntriesList:function(){return e.call(\"navigateToSpaceEnvRoute\",{route:\"entries\"})},openAssetsList:function(){return e.call(\"navigateToSpaceEnvRoute\",{route:\"assets\"})},onSlideInNavigation:function(e){return n.attach(e)}}}var E=\"preInstall\",m=\"postInstall\",A=function(e){return\"object\"==typeof e&&null!==e&&!Array.isArray(e)},C=function(e){return\"function\"==typeof e},T=function(e){return console.error(e),Promise.resolve(!1)},w=function(e,t,n){if(!C(e))return Promise.resolve(t);var r;try{r=void 0===n?e():e(n)}catch(e){return T(e)}var o,i=r;return A(o=i)&&C(o.then)||(i=Promise.resolve(i)),i.then((function(e){return e instanceof Error?Promise.reject(e):!1!==e&&(A(e)?e:t)}),T).catch(T)};function I(e){var t,n=((t={}).preInstall=null,t.postInstall=null,t),r=function(e,t){if(!C(t))throw new Error(\"Handler must be a function.\");n[e]=t};return e.addHandler(\"appHook\",(function(t){var r=t.stage,o=t.installationRequestId,i=t.err;return r===E?w(n[r],{}).then((function(t){return e.send(\"appHookResult\",{stage:r,installationRequestId:o,result:t})})):r===m?w(n[r],void 0,i||null).then((function(){return e.send(\"appHookResult\",{stage:r,installationRequestId:o})})):Promise.resolve()})),{setReady:function(){return e.call(\"callAppMethod\",\"setReady\")},isInstalled:function(){return e.call(\"callAppMethod\",\"isInstalled\")},getParameters:function(){return e.call(\"callAppMethod\",\"getParameters\")},getCurrentState:function(){return e.call(\"callAppMethod\",\"getCurrentState\")},onConfigure:function(e){r(E,e)},onConfigurationCompleted:function(e){r(m,e)}}}var b,L={LOCATION_ENTRY_FIELD:\"entry-field\",LOCATION_ENTRY_FIELD_SIDEBAR:\"entry-field-sidebar\",LOCATION_ENTRY_SIDEBAR:\"entry-sidebar\",LOCATION_DIALOG:\"dialog\",LOCATION_ENTRY_EDITOR:\"entry-editor\",LOCATION_PAGE:\"page\",LOCATION_APP_CONFIG:\"app-config\"},O=[D,P,function(e,t){var n=t.field;if(!n)throw new Error('FieldAPI called for location without \"field\" property defined.');return{field:new l(e,n)}},N,H],S=((b={})[L.LOCATION_ENTRY_FIELD]=O,b[L.LOCATION_ENTRY_FIELD_SIDEBAR]=O,b[L.LOCATION_ENTRY_SIDEBAR]=[D,P,N,H],b[L.LOCATION_ENTRY_EDITOR]=[D,P,N],b[L.LOCATION_DIALOG]=[D,function(e){return{close:function(t){return e.send(\"closeDialog\",t)}}},H],b[L.LOCATION_PAGE]=[D],b[L.LOCATION_APP_CONFIG]=[D,function(e){return{app:I(e)}}],b);function D(e,t){var n=t.user,r=t.parameters,o=t.locales,i=t.ids,a=t.initialContentTypes,s=t.location||L.LOCATION_ENTRY_FIELD;return{location:{is:function(e){return s===e}},user:n,parameters:r,locales:{available:o.available,default:o.default,names:o.names,fallbacks:o.fallbacks,optional:o.optional,direction:o.direction},space:h(e,a),dialogs:v(e,i),navigator:_(e,i),notifier:{success:function(t){return e.send(\"notify\",{type:\"success\",message:t})},error:function(t){return e.send(\"notify\",{type:\"error\",message:t})}},ids:i,access:{can:function(t,n,r){return e.call(\"checkAccess\",t,n,r)},canEditAppConfig:function(){return e.call(\"checkAppConfigAccess\")}}}}function H(e,t,n){return{window:c(n,e)}}function N(e,t){return{editor:y(e,t.editorInterface)}}function P(e,t){var n=t.locales,r=t.contentType,o=t.entry,i=t.fieldInfo;return{contentType:r,entry:p(e,o,i,(function(t){return new u(e,t,n.default)}))}}var R,x,k,F,M=(R=window,x=function(e,t,n){return(S[t.location]||O).reduce((function(o,i){return r(r({},o),i(e,t,n))}),{})},(k={promise:null,resolve:null}).promise=new Promise((function(e){k.resolve=e})),(F=k).promise.then((function(e){var t=e[0],n=R.document;n.addEventListener(\"focus\",(function(){return t.send(\"setActive\",!0)}),!0),n.addEventListener(\"blur\",(function(){return t.send(\"setActive\",!1)}),!0)})),function(e,t){!function(e,t){function n(r){var o=r.data;\"connect\"===o.method&&(e.removeEventListener(\"message\",n),t.apply(void 0,o.params))}e.addEventListener(\"message\",n)}(e,(function(n,r){var o=new s(n.id,e);t(o,n,r)}))}(R,(function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return F.resolve(e)})),function(e,t){var n=void 0===t?{supressIframeWarning:!1}:t,r=n.makeCustomApi;n.supressIframeWarning||R.self!==R.top||console.error(\"Cannot use ui-extension-sdk outside of Contenful:\\n\\nIn order for the ui-extension-sdk to function correctly, your app needs to be run in an iframe in the Contentful Web App.\\n\\nLearn more about local development with the ui-extension-sdk here:\\n  https://www.contentful.com/developers/docs/extensibility/ui-extensions/faq/#how-can-i-use-the-ui-extension-sdk-locally\"),F.promise.then((function(t){var n,o=t[0],i=t[1],a=t[2],s=x(o,i,R);\"function\"==typeof r&&(n=r(o,i)),a.forEach((function(e){o._handleMessage(e)})),e(s,n)}))});e.init=M,e.locations=L,Object.defineProperty(e,\"__esModule\",{value:!0})})),window.contentfulApp=window.contentfulExtension;","/**\r\n * @documentation https://github.com/contentful/ui-extensions-sdk/blob/master/typings.d.ts\r\n */\r\nimport { FieldAPI, DialogsAPI } from 'contentful-ui-extensions-sdk'\r\n\r\nexport { DialogsAPI }\r\n\r\nexport enum Intent {\r\n  PRIMARY = 'primary',\r\n  POSITIVE = 'positive',\r\n  NEGATIVE = 'negative',\r\n}\r\n\r\nconst noop = () => {\r\n  /* noop */\r\n}\r\n\r\n/**\r\n * Check if window is within an iframe\r\n *\r\n * @source https://stackoverflow.com/a/326076/6817437\r\n */\r\nconst inIframe = () => {\r\n  try {\r\n    return window.self !== window.top\r\n  } catch (e) {\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Determine whether to use Contentful API or mock for dev and demo\r\n */\r\nexport const useContentfulApi = () => inIframe()\r\n\r\n/**\r\n * Optional table data that may seed the table with populated data -\r\n * such as when an existing table is accessed\r\n */\r\nexport type TableData = Array<Array<string>>\r\n\r\n/**\r\n * Storage values for the extension's content field\r\n */\r\nexport interface ExtensionValues {\r\n  columnColors: string[]\r\n  useColumnHeader: boolean\r\n  useRowHeader: boolean\r\n  tableData: TableData\r\n}\r\n\r\ntype ChangeHandler = (arg: ExtensionValues) => void\r\n\r\n/**\r\n * Field action prototype to edit the `ExtensionValues`\r\n * of this extension. Not all values on this object are typed here\r\n */\r\nexport type ExtensionField =\r\n  | FieldAPI\r\n  | {\r\n      getValue: () => ExtensionValues\r\n      setValue: ChangeHandler\r\n      onValueChanged: (arg: ChangeHandler) => ChangeHandler\r\n    }\r\n\r\n/**\r\n * Contentful's `window.contentfulExtension` callback arg\r\n * Not all values on this object are typed here 😞\r\n */\r\nexport interface Extension {\r\n  field: ExtensionField\r\n  dialogs?: DialogsAPI\r\n  /**\r\n   * Add contentful API to window\r\n   *\r\n   * @source https://www.contentful.com/developers/docs/extensibility/ui-extensions/sdk-reference/#window\r\n   */\r\n  window: {\r\n    startAutoResizer: () => void\r\n    updateHeight: () => void\r\n  }\r\n}\r\n\r\n/**\r\n * Seed the tableData with initial data, minimum rows/columns\r\n * should at least be passed in\r\n */\r\nexport const getInitialTableData = ({\r\n  rows,\r\n  columns,\r\n}: {\r\n  rows: number\r\n  columns: number\r\n}): TableData => Array.from(new Array(rows), () => new Array(columns))\r\n\r\n/**\r\n * Seed the tableData with initial data, minimum rows/columns\r\n * should at least be passed in\r\n */\r\nexport const getInitialColumnColorData = ({\r\n  columns\r\n}: {\r\n  columns: number\r\n}): string[] => new Array(columns)\r\n\r\n/**\r\n * Keep a number with the boundaries of a minimum and maximum\r\n *\r\n * @param num value to evaluate\r\n * @param min minimum value boundary\r\n * @param max maximum value boundary\r\n * @returns bounded value within a min/max\r\n */\r\nexport const clamp = (num: number, min: number, max: number) =>\r\n  Math.min(Math.max(num, min), max)\r\n\r\n/**\r\n * Pretend prototype for `Extension.field`\r\n */\r\nclass MockExtensionField {\r\n  storageKeyName = 'mockContentfulData'\r\n\r\n  private serialize(data: ExtensionValues): string {\r\n    return JSON.stringify(data)\r\n  }\r\n\r\n  private deserialize(data: string): ExtensionValues {\r\n    return JSON.parse(data)\r\n  }\r\n\r\n  setValue(value: ExtensionValues) {\r\n    localStorage.setItem(this.storageKeyName, this.serialize(value))\r\n    this.onValueChanged()\r\n  }\r\n\r\n  getValue(): ExtensionValues {\r\n    return this.deserialize(localStorage.getItem(this.storageKeyName))\r\n  }\r\n\r\n  onValueChanged() {\r\n    return this.getValue\r\n  }\r\n}\r\n\r\n/**\r\n * @returns mimic for extension parameter provided by Contentful API\r\n */\r\nexport const createMockExtension = (): Extension => ({\r\n  field: new MockExtensionField(),\r\n  window: {\r\n    updateHeight: noop,\r\n    startAutoResizer: noop,\r\n  },\r\n})\r\n","import TableController from './table-controller'\r\nimport { clamp } from './utils'\r\n\r\nexport const minColumns = 2\r\nexport const minRows = 2\r\nconst maxColumns = 5\r\nconst maxRows = 30\r\n\r\nconst columnsInputElem = document.getElementById(\r\n  'columns-count'\r\n) as HTMLInputElement\r\nconst rowsInputElem = document.getElementById('rows-count') as HTMLInputElement\r\nconst useColumnHeaderInputElem = document.getElementById(\r\n  'use-column-header'\r\n) as HTMLInputElement\r\nconst useRowHeaderInputElem = document.getElementById(\r\n  'use-row-header'\r\n) as HTMLInputElement\r\nconst addColumnButtonElem = document.getElementById(\r\n  'add-column'\r\n) as HTMLButtonElement\r\nconst removeColumnButtonElem = document.getElementById(\r\n  'remove-column'\r\n) as HTMLButtonElement\r\nconst addRowButtonElem = document.getElementById('add-row') as HTMLButtonElement\r\nconst removeRowButtonElem = document.getElementById(\r\n  'remove-row'\r\n) as HTMLButtonElement\r\n\r\ncolumnsInputElem.min = minColumns.toString()\r\ncolumnsInputElem.max = maxColumns.toString()\r\nrowsInputElem.min = minRows.toString()\r\nrowsInputElem.max = maxRows.toString()\r\n\r\n/**\r\n * Create all the event handles on the table element's columns/rows and\r\n * auxiliary settings buttons/inputs\r\n *\r\n * @param tableElem HTML table one which to add/remove columns/rows\r\n */\r\nconst createHandlers = (table: TableController) => {\r\n  /**\r\n   * Set initial values from state\r\n   */\r\n  columnsInputElem.value = table.columns.toString()\r\n  rowsInputElem.value = table.rows.toString()\r\n  useColumnHeaderInputElem.checked = table.useColumnHeader\r\n  useRowHeaderInputElem.checked = table.useRowHeader\r\n\r\n  /**\r\n   * Handle column header setting toggle\r\n   */\r\n  useColumnHeaderInputElem.onchange = function (ev) {\r\n    const checked = (ev.currentTarget as HTMLInputElement).checked\r\n    if (checked !== undefined) {\r\n      table.setUseColumnHeader(checked)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle row header setting toggle\r\n   */\r\n  useRowHeaderInputElem.onchange = function (ev) {\r\n    const checked = (ev.currentTarget as HTMLInputElement).checked\r\n    if (checked !== undefined) {\r\n      table.setUseRowHeader(checked)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles columns field input alter to change table column sizing\r\n   */\r\n  columnsInputElem.onchange = async function (ev) {\r\n    const oldValue = table.columns\r\n    const newValue = clamp(\r\n      parseInt((ev.currentTarget as HTMLInputElement).value, 10),\r\n      minColumns,\r\n      maxColumns\r\n    )\r\n    let commitNewValue = true\r\n    if (oldValue < newValue) {\r\n      const diff = newValue - oldValue\r\n      for (let i = 0; i < diff; i++) {\r\n        table.addColumn()\r\n      }\r\n    } else if (oldValue > newValue) {\r\n      const diff = oldValue - newValue\r\n      for (let i = 0; i < diff; i++) {\r\n        commitNewValue = await table.removeColumn()\r\n      }\r\n    }\r\n    if (commitNewValue) {\r\n      columnsInputElem.value = newValue.toString()\r\n    } else {\r\n      columnsInputElem.value = oldValue.toString()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles rows field input change to alter table row sizing\r\n   */\r\n  rowsInputElem.onchange = async function (ev) {\r\n    const oldValue = table.rows\r\n    const newValue = clamp(\r\n      parseInt((ev.target as HTMLInputElement).value, 10),\r\n      minRows,\r\n      maxRows\r\n    )\r\n    let commitNewValue = true\r\n    if (oldValue < newValue) {\r\n      const diff = newValue - oldValue\r\n      for (let i = 0; i < diff; i++) {\r\n        table.addRow()\r\n      }\r\n    } else if (oldValue > newValue) {\r\n      const diff = oldValue - newValue\r\n      for (let i = 0; i < diff; i++) {\r\n        commitNewValue = await table.removeRow()\r\n      }\r\n    }\r\n    if (commitNewValue) {\r\n      rowsInputElem.value = newValue.toString()\r\n    } else {\r\n      rowsInputElem.value = oldValue.toString()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles add column button clicks to add a new column and\r\n   * increase columns input count by one\r\n   */\r\n  addColumnButtonElem.onclick = function (_ev) {\r\n    const oldValue = table.columns\r\n    const newValue = clamp(oldValue + 1, minColumns, maxColumns)\r\n    table.addColumn()\r\n    columnsInputElem.value = newValue.toString()\r\n  }\r\n\r\n  /**\r\n   * Handles remove column button clicks to remove the last column\r\n   * and decrease columns input count by one\r\n   */\r\n  removeColumnButtonElem.onclick = async function (_ev) {\r\n    const oldValue = table.columns\r\n    const newValue = clamp(oldValue - 1, minColumns, maxColumns)\r\n    const deleteConfirmed = await table.removeColumn()\r\n    if (!deleteConfirmed) {\r\n      return\r\n    }\r\n    columnsInputElem.value = newValue.toString()\r\n  }\r\n\r\n  /**\r\n   * Handles add row button clicks to add a new row and\r\n   * increase the row input count by one\r\n   */\r\n  addRowButtonElem.onclick = function (_ev) {\r\n    const oldValue = table.rows\r\n    const newValue = clamp(oldValue + 1, minRows, maxRows)\r\n    table.addRow()\r\n    rowsInputElem.value = newValue.toString()\r\n  }\r\n\r\n  /**\r\n   * Handles remove row button clicks to remove a new row\r\n   * and decrease the row input count by one\r\n   */\r\n  removeRowButtonElem.onclick = async function (_ev) {\r\n    const oldValue = table.rows\r\n    const newValue = clamp(oldValue - 1, minRows, maxRows)\r\n    const deleteConfirmed = await table.removeRow()\r\n    if (!deleteConfirmed) {\r\n      return\r\n    }\r\n    rowsInputElem.value = newValue.toString()\r\n  }\r\n}\r\n\r\nexport default createHandlers\r\n","import { Intent, ExtensionValues, ExtensionField, DialogsAPI } from './utils'\r\nimport { minColumns, minRows } from './event-handlers'\r\n\r\nexport default class TableController {\r\n  /**\r\n   * Table element on which to add/remove rows\r\n   */\r\n  table: HTMLTableElement\r\n  /**\r\n   * Values from existing tables and to append new values to\r\n   */\r\n  state: ExtensionValues\r\n  /**\r\n   * Save state to external source (Contentful extension or otherwise localStorage for demo)\r\n   */\r\n  db: ExtensionField\r\n  /**\r\n   * Can be utilized to unsubscribe to value changes\r\n   */\r\n  detachValueChangeHandler: (values: ExtensionValues) => void\r\n  /**\r\n   * API provided by Contentful to allow extension to respond to user feedback\r\n   */\r\n  dialogs: DialogsAPI\r\n\r\n  /**\r\n   * Initialize the table and its data\r\n   */\r\n  constructor({ table, state, db, dialogs }) {\r\n    this.table = table\r\n    this.state = state\r\n    this.db = db\r\n    this.dialogs = dialogs\r\n\r\n    for (let i = 0; i < this.state.tableData.length; i++) {\r\n      this.addRow()\r\n    }\r\n\r\n    this.handleColorSelect()\r\n    this.handleColumnHeaderStyle()\r\n    this.handleRowHeaderStyle()\r\n    //this.handleColorSelect()\r\n\r\n    /**\r\n     * @usage see https://www.contentful.com/developers/docs/extensibility/ui-extensions/sdk-reference/#field\r\n     * Section: \"Receiving notifications for external field value changes\"\r\n     * `detachValueChangeHandler` can be used to unsubscribe from onChange events\r\n     */\r\n    this.detachValueChangeHandler = this.db.onValueChanged(\r\n      this.valueChangeHandler\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Save the current state\r\n   */\r\n  save = () => {\r\n    this.db.setValue(this.state)\r\n  }\r\n\r\n  /**\r\n   * Getter for current state\r\n   */\r\n  get currentState() {\r\n    return this.state\r\n  }\r\n\r\n  /**\r\n   * Column getter\r\n   */\r\n  get columns() {\r\n    return this.state.tableData[0].length\r\n  }\r\n\r\n  /**\r\n   * Row getter\r\n   */\r\n  get rows() {\r\n    return this.state.tableData.length\r\n  }\r\n\r\n  /**\r\n   * Callback to handle external changes to values (parallel editing)\r\n   * or when `ExtensionField.setValue` is called\r\n   */\r\n  private valueChangeHandler = (values: ExtensionValues) => {\r\n    this.state = Object.assign({}, this.state, values)\r\n  }\r\n\r\n  /**\r\n   * Change `useHeader` state\r\n   */\r\n  setUseColumnHeader = (useColumnHeader: boolean) => {\r\n    this.state.useColumnHeader = useColumnHeader\r\n    this.save()\r\n    this.handleColumnHeaderStyle()\r\n  }\r\n\r\n  /**\r\n   * Style table header for user according to header setting\r\n   */\r\n  handleColumnHeaderStyle = () => {\r\n    const firstRowCells = Array.from(this.table.rows[0].cells)\r\n    if (this.state.useRowHeader) {\r\n      firstRowCells.shift()\r\n    }\r\n\r\n    if (this.state.useColumnHeader) {\r\n      firstRowCells.forEach((cellElem) => {\r\n        this.changeTag(cellElem, 'th')\r\n      })\r\n    } else {\r\n      firstRowCells.forEach((cellElem) => {\r\n        this.changeTag(cellElem, 'td')\r\n      })\r\n    }\r\n  }\r\n\r\n  setUseRowHeader = (useRowHeader: boolean) => {\r\n    this.state.useRowHeader = useRowHeader\r\n    this.save()\r\n    this.handleRowHeaderStyle()\r\n  }\r\n\r\n  /**\r\n   * Style row header according to header setting\r\n   */\r\n  handleRowHeaderStyle = () => {\r\n    const rows = Array.from(this.table.rows)\r\n    if (this.state.useRowHeader) {\r\n      rows.forEach((rowElem) => {\r\n        const firstCell = rowElem.cells[0]\r\n        this.changeTag(firstCell, 'th')\r\n      })\r\n    } else {\r\n      rows.forEach((rowElem, index) => {\r\n        if (this.state.useColumnHeader && index === 0) {\r\n          return\r\n        }\r\n        const firstCell = rowElem.cells[0]\r\n        this.changeTag(firstCell, 'td')\r\n      })\r\n    }\r\n  }\r\n\r\n  handleColorSelect = () => {\r\n      const firstRowCells = Array.from(this.table.rows[0].cells)\r\n      firstRowCells.forEach((cellElem, columnIndex) => {\r\n        // Skip the first cell \r\n        if (columnIndex === 0) {\r\n          return\r\n        }\r\n        let colorSelect = cellElem.querySelector('select')\r\n        if (!colorSelect) {\r\n          colorSelect = document.createElement('select')\r\n          const colors = ['No border colour', 'Black', 'Gold', 'Silver', 'Bronze', 'Light Lilac', 'Light Blue']\r\n          const hexColor = ['', '#000000', '#FFD245', '#D8D8D8', '#FFB886', '#BFBFFD', '#80D0E5']\r\n          for (let i = 0; i < colors.length; i++) {\r\n            const option = document.createElement('option')\r\n            option.value = hexColor[i]\r\n            option.text = colors[i]\r\n            //option.style.color = hexColor[i] === '' ? 'transparent' : hexColor[i];\r\n            colorSelect.appendChild(option)\r\n          }\r\n          // Set the selected color based on the current state\r\n          if (this.state.columnColors && this.state.columnColors[columnIndex]) {\r\n            const selectedColor = this.state.columnColors[columnIndex]\r\n            colorSelect.value = selectedColor || '-'\r\n          }\r\n\r\n          // Ensure columnColors array is initialized and has enough space\r\n          if (!this.state.columnColors) {\r\n            this.state.columnColors = [];\r\n          }\r\n          if (this.state.columnColors.length <= columnIndex) {\r\n            this.state.columnColors[columnIndex] = ''; // Initialize with a default value\r\n          }\r\n          colorSelect.onchange = () => {\r\n            this.state.columnColors[columnIndex] = colorSelect.value\r\n            this.save()\r\n            //this.applyColumnColors()\r\n          }\r\n          cellElem.appendChild(colorSelect)\r\n        }\r\n      })\r\n  }\r\n\r\n  /**\r\n   * @source https://stackoverflow.com/a/15086834/6817437\r\n   */\r\n  private changeTag = (el: HTMLElement, newTagName: string) => {\r\n    const newEl = document.createElement(newTagName)\r\n    while (el.firstChild) {\r\n      newEl.appendChild(el.firstChild)\r\n    }\r\n    /**\r\n     * Backwards loop in order to maintain the original order of\r\n     * any attributes\r\n     */\r\n    for (let i = el.attributes.length - 1; i >= 0; --i) {\r\n      newEl.attributes.setNamedItem(el.attributes[i].cloneNode() as Attr)\r\n    }\r\n    el.parentNode.replaceChild(newEl, el)\r\n  }\r\n\r\n  /**\r\n   * State item getter\r\n   */\r\n  get useColumnHeader() {\r\n    return this.state.useColumnHeader\r\n  }\r\n\r\n  /**\r\n   * State item getter\r\n   */\r\n  get useRowHeader() {\r\n    return this.state.useRowHeader\r\n  }\r\n\r\n  /**\r\n   * Confirm whether to delete, using Contentful Dialog API\r\n   * if it's available, or just `window.confirm`\r\n   *\r\n   * @returns a promise of whether to delete\r\n   */\r\n  confirmDelete = async (message: string): Promise<boolean> => {\r\n    if (this.dialogs) {\r\n      return this.dialogs.openConfirm({\r\n        title: 'Really delete?',\r\n        message,\r\n        intent: Intent.NEGATIVE,\r\n      })\r\n    } else {\r\n      return window.confirm(message)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The magic behind `textarea` continuing to fill\r\n   * parent `td` height. As text progresses to CRLF or is deleted,\r\n   * the natural height of the textarea is evaluated, and all\r\n   * textareas in the row are forced to match the height of the\r\n   * tallest textarea in that row.\r\n   *\r\n   * @source Forked from https://stackoverflow.com/a/24676492/6817437\r\n   *\r\n   * @usage Should be applied to `textarea` oninput and when\r\n   * new table cells are initialized\r\n   *\r\n   * @param element HTML textarea to measure automatic growth with input\r\n   */\r\n  private autoGrow = (element: HTMLTextAreaElement) => {\r\n    // Scrollheight should only be evaluated when the element's height is 'auto'\r\n    element.style.height = 'auto'\r\n    const newHeight = element.scrollHeight\r\n    element.style.height = `${newHeight}px`\r\n\r\n    // Make sure all cells in row are as tall as the tallest\r\n    const cellRow = element.dataset.row\r\n    const rowTextElems: NodeListOf<HTMLTextAreaElement> = document.querySelectorAll(\r\n      `[data-row=\"${cellRow}\"]`\r\n    )\r\n    let largestHeight = newHeight\r\n    rowTextElems.forEach((rowEl) => {\r\n      const rowElOriginalHeight = rowEl.style.height\r\n      rowEl.style.height = 'auto'\r\n      const rowElHeight = rowEl.scrollHeight\r\n      if (rowElHeight > largestHeight) {\r\n        largestHeight = rowElHeight\r\n      }\r\n      rowEl.style.height = rowElOriginalHeight\r\n    })\r\n    rowTextElems.forEach((rowEl) => {\r\n      rowEl.style.height = `${largestHeight}px`\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @usage Add cell with textarea to a table row, initialize textarea\r\n   * with an autogrow oninput feature and save changes\r\n   *\r\n   * @param rowElem     HTML row element on which to append cell\r\n   * @param dataRow     Row index (y-axis, zero-based)\r\n   * @param dataColumn  Column index (x-axis, zero-based)\r\n   */\r\n  addCell = (\r\n    rowElem: HTMLTableRowElement,\r\n    rowIndex: number,\r\n    columnIndex: number\r\n  ) => {\r\n    const cell = rowElem.insertCell()\r\n    const textArea = document.createElement('textarea')\r\n    textArea.oninput = () => {\r\n      this.autoGrow(textArea)\r\n      this.state.tableData[rowIndex][columnIndex] = textArea.value || undefined\r\n      this.save()\r\n    }\r\n    textArea.dataset.row = rowIndex.toString()\r\n    textArea.dataset.column = columnIndex.toString()\r\n    const { tableData } = this.state\r\n    const value =\r\n      tableData && tableData[rowIndex] && tableData[rowIndex][columnIndex]\r\n    textArea.value = value || ''\r\n    cell.appendChild(textArea)\r\n    // Invoke once on init to match other cells in the same row\r\n    this.autoGrow(textArea)\r\n  }\r\n\r\n  /**\r\n   * @usage Add a row to the bottom of the table element\r\n   */\r\n  addRow = () => {\r\n    const lastRow = this.table.rows[this.table.rows.length - 1]\r\n    let index: number\r\n    /**\r\n     * Last row is not defined on the first pass\r\n     * when creating a row on an empty table\r\n     * and no `lastRow` is defined\r\n     */\r\n    if (lastRow) {\r\n      const textElem = lastRow.querySelector('textarea')\r\n      index = parseInt(textElem.dataset.row, 10) + 1\r\n    } else {\r\n      index = 0\r\n    }\r\n\r\n    const row = this.table.insertRow()\r\n    const columns = this.state.tableData[0].length\r\n    for (let j = 0; j < columns; j++) {\r\n      const columnIndex = j\r\n      this.addCell(row, index, columnIndex)\r\n    }\r\n\r\n    const cellColumns = new Array(columns)\r\n    if (!this.state.tableData[index]) {\r\n      this.state.tableData.push(cellColumns)\r\n      this.save()\r\n    }\r\n    this.handleRowHeaderStyle()\r\n  }\r\n\r\n  /**\r\n   * @usage Remove the last row from the table\r\n   *\r\n   * @returns A promise of whether the row was deleted\r\n   */\r\n  removeRow = async (): Promise<boolean> => {\r\n    if (this.table.rows.length <= minRows) {\r\n      return\r\n    }\r\n    const deleteIndex = this.table.rows.length - 1\r\n    let needsConfirmation = false,\r\n      removeValues = ''\r\n    const row = this.table.rows[deleteIndex].cells\r\n    Array.from(row).forEach((cellElem) => {\r\n      const textElem = cellElem.querySelector('textarea')\r\n      if (!!textElem.value) {\r\n        needsConfirmation = true\r\n        removeValues += `\\n\\n${textElem.value}`\r\n      }\r\n    })\r\n    const yesDelete = needsConfirmation\r\n      ? await this.confirmDelete(\r\n          `Are you sure you want to delete row ${\r\n            deleteIndex + 1\r\n          }?${removeValues}`\r\n        )\r\n      : true\r\n    if (yesDelete) {\r\n      this.table.deleteRow(deleteIndex)\r\n      this.state.tableData.splice(deleteIndex, 1)\r\n      this.save()\r\n    }\r\n    return yesDelete\r\n  }\r\n\r\n  /**\r\n   * @usage Add a new column to the right in the table\r\n   */\r\n  addColumn = () => {\r\n    const lastCell = this.table.rows[0].cells[\r\n      this.table.rows[0].cells.length - 1\r\n    ]\r\n    const textElem = lastCell.querySelector('textarea')\r\n    const columnPosition = parseInt(textElem.dataset.column, 10) + 1\r\n\r\n    Array.from(this.table.rows).forEach((rowEl, index) => {\r\n      const firstCell = rowEl.cells[0]\r\n      const textElem = firstCell.querySelector('textarea')\r\n      const rowPosition = parseInt(textElem.dataset.row, 10)\r\n      this.addCell(rowEl, rowPosition, columnPosition)\r\n      this.state.tableData[index].push(undefined)\r\n      this.save()\r\n    })\r\n    this.handleColorSelect()\r\n    this.handleColumnHeaderStyle()\r\n    //this.handleColorSelect()\r\n  }\r\n\r\n  /**\r\n   * @usage Remove the table column with the highest index (or most-recently created)\r\n   *\r\n   * @returns A promise of whether the row was deleted\r\n   */\r\n  removeColumn = async (): Promise<boolean> => {\r\n    if (this.table.rows[0].cells.length <= minColumns) {\r\n      return\r\n    }\r\n    const lastCell = this.table.rows[0].cells[\r\n      this.table.rows[0].cells.length - 1\r\n    ]\r\n    const textElem = lastCell.querySelector('textarea')\r\n    const columnNumber = parseInt(textElem.dataset.column, 10) + 1\r\n\r\n    let needsConfirmation = false,\r\n      removeValues = ''\r\n    Array.from(this.table.rows).forEach((rowElem) => {\r\n      const lastCell = rowElem.cells[rowElem.cells.length - 1]\r\n      const textElem = lastCell.querySelector('textarea')\r\n      if (!!textElem.value) {\r\n        needsConfirmation = true\r\n        removeValues += `\\n\\n${textElem.value}`\r\n      }\r\n    })\r\n    const yesDelete = needsConfirmation\r\n      ? await this.confirmDelete(\r\n          `Are you sure you want to delete column ${columnNumber}?${removeValues}`\r\n        )\r\n      : true\r\n    if (yesDelete) {\r\n      Array.from(this.table.rows).forEach((rowEl, index) => {\r\n        const deleteIndex = rowEl.cells.length - 1\r\n        rowEl.deleteCell(deleteIndex)\r\n        this.state.tableData[index].splice(deleteIndex, 1)\r\n        this.save()\r\n      })\r\n    }\r\n    return yesDelete\r\n  }\r\n}\r\n","import { init as initContentfulExtension } from 'contentful-ui-extensions-sdk'\r\n\r\nimport TableController from './table-controller'\r\nimport createHandlers, { minColumns, minRows } from './event-handlers'\r\nimport {\r\n  useContentfulApi,\r\n  createMockExtension,\r\n  getInitialTableData,\r\n  Extension,\r\n  getInitialColumnColorData,\r\n} from './utils'\r\n\r\nconst contentElem = document.getElementById('table-extension-content')\r\nconst tableElem = contentElem.querySelector('table')\r\n\r\n/**\r\n * Handles Contentful UI extension creation with initial values (if any)\r\n * and create the table contents dynamically based on our defaults passed\r\n * to `getInitialData`\r\n *\r\n * @param extension From Contentful API in order to handle data\r\n */\r\nconst handleInitialization = (extension?: Extension) => {\r\n  let value = extension.field.getValue()\r\n  /**\r\n   * reset array if data corrupt -\r\n   * This could only occur when changes to state structure\r\n   * are made in a development environment.\r\n   *\r\n   * Resets state by resetting value definition\r\n   */\r\n  if (\r\n    value &&\r\n    value.tableData &&\r\n    !Array.isArray(value.tableData) &&\r\n    !Array.isArray(value.tableData[0])\r\n  ) {\r\n    value = undefined\r\n  }\r\n\r\n  if (!value) {\r\n    /**\r\n     * Default table values\r\n     */\r\n    value = {\r\n      useColumnHeader: true,\r\n      useRowHeader: false,\r\n      tableData: getInitialTableData({\r\n        columns: minColumns,\r\n        rows: minRows,\r\n      }),\r\n      columnColors: getInitialColumnColorData({columns: minColumns}),\r\n    }\r\n  }\r\n\r\n  const tableController = new TableController({\r\n    table: tableElem,\r\n    state: value,\r\n    db: extension.field,\r\n    dialogs: extension.dialogs,\r\n  })\r\n\r\n  createHandlers(tableController)\r\n\r\n  /**\r\n   * Automatically size the iframe as the content grows\r\n   * in order to avoid scrollbars within the extension\r\n   */\r\n  extension.window.updateHeight()\r\n  extension.window.startAutoResizer()\r\n}\r\n\r\n/**\r\n * Conditionally set up environment for demo/dev and Contentful extension\r\n */\r\nif (useContentfulApi()) {\r\n  try {\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-ignore we need to verify whether the types provided with the contentful SDK are correct or not\r\n    initContentfulExtension(handleInitialization)\r\n  } catch (err) {\r\n    console.error(err) // eslint-disable-line no-console\r\n    contentElem.innerHTML = `\r\n      <div>\r\n        <h1>\r\n          Error\r\n        </h1>\r\n        <p>\r\n          We encountered an error with the Table Contentful UI Extension.\r\n        </p>\r\n      </div>\r\n    `\r\n  }\r\n} else {\r\n  const mockExtension = createMockExtension()\r\n  handleInitialization(mockExtension)\r\n}\r\n"]}